
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data

# test_hyb_mgga_xc_pw6b95_BrOH_1_zk() not generated due to NaN in reference data

# test_hyb_mgga_xc_pw6b95_BrOH_1_vrho() not generated due to NaN in reference data

# test_hyb_mgga_xc_pw6b95_BrOH_1_vsigma() not generated due to NaN in reference data


def test_hyb_mgga_xc_pw6b95_BrOH_1_vtau():
    # Prepare the input
    inp = test_data["BrOH"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_pw6b95", 1)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vtau"].flatten()
    ref_tgt = numpy.asarray([-3.917658360446814e-05, -3.917641123231473e-05, -3.917551531534577e-05, -3.917834055818163e-05, -3.917649376224852e-05, -3.917649376224852e-05, -9.887043367868360e-04, -9.887007300229396e-04, -9.885308710347032e-04, -9.884593417231744e-04, -9.886951608360740e-04, -1.140459400354077e-04, -1.609190699825020e-02, -5.767710328391119e-04, -4.728909269493953e-04, -5.201597774881401e-04, -5.796628570798032e-04, -5.796628570798032e-04, -3.401681683389604e-03, -3.611455182535537e-03, -1.195932061492321e-02, -6.216495795702569e-04, -3.459543533915730e-03, -3.459543533915730e-03, -3.063188027822859e-06, -3.457117532801358e-06, -5.606931617206023e-05, -1.388281748756483e-07, -3.512858858315960e-06, -3.512858858315959e-06, -2.311933787988546e-04, -2.322482242044793e-04, -2.313102189184753e-04, -4.884199834238407e-04, -2.317214335574851e-04, -2.317214335574851e-04, -2.666387509531268e-03, -2.634635771704018e-03, -2.679393442276249e-03, -2.654371911375143e-03, -2.628347316080931e-03, -2.423629222601889e-04, -4.000493404835717e-03, -6.316724550435834e-03, -3.238919792222819e-03, -4.804475547639399e-03, -4.620113338389843e-03, -1.896391590989731e-02, -3.163010342284969e-01, -1.329262545421406e-03, -3.222752639339310e-01, -6.852256986785079e-04, -6.371597775521164e-04, -6.371597775521164e-04, -1.643503726705519e+01, -2.306705595038767e-07, -4.019287553454352e-07, -6.222606556189200e-01, -1.566836490373383e+01, -2.187035505981969e-07, -1.556810302819866e-02, -1.303426865177121e-02, -1.926676861498073e-02, -1.456793306746552e-02, -1.421118105318553e-02, -1.421118105318553e-02, -1.532533609762970e-02, -4.651872275813026e-03, -6.433252286434629e-03, -8.867863325595606e-03, -7.503178762558798e-03, -2.296871231034412e-02, -4.928070199679674e-03, -8.655545137078187e-02, -2.640134249200433e-03, -4.513165412366922e-02, -3.547193298935214e-03, -3.547193298935212e-03, -2.999566309076233e-02, -4.261412635188694e-05, -8.447337759622149e-05, -5.954722455274908e-03, -4.271985534400362e-01, -3.060471629506281e-04, -1.851546392222805e-06, -6.330893101093325e-09, -7.859592743715234e-08, -3.253591175057595e-04, -1.941756766540790e-07, -1.941756766540786e-07])
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
