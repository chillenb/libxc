
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data

# test_hyb_mgga_xc_pw6b95_BrOH_cation_2_zk() not generated due to NaN in reference data

# test_hyb_mgga_xc_pw6b95_BrOH_cation_2_vrho() not generated due to NaN in reference data

# test_hyb_mgga_xc_pw6b95_BrOH_cation_2_vsigma() not generated due to NaN in reference data


def test_hyb_mgga_xc_pw6b95_BrOH_cation_2_vtau():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_pw6b95", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vtau"].flatten()
    ref_tgt = numpy.asarray([-3.917471522261581e-05, -3.917480666326107e-05, -3.917448580994359e-05, -3.917464000171363e-05, -3.917370661284050e-05, -3.917353614629186e-05, -3.917629863541938e-05, -1.418520845868208e-05, -3.917458068216103e-05, -1.418692814909999e-05, -1.418571858457173e-05, -1.418692814909999e-05, -1.138573357315474e-04, -9.886367289552889e-04, -1.139044555280382e-04, -1.138519500949551e-04, -1.148248548618643e-04, -1.149881996662649e-04, -1.144726417849674e-04, -1.144711061738341e-04, -1.137840882872824e-04, -1.153004599587850e-04, -9.889006949787293e-04, -1.153004599587850e-04, -1.598021136832501e-02, -1.587732578179836e-02, -1.602089576144582e-02, -6.157639537225731e-04, -4.995174727999066e-04, -4.863177770462637e-04, -5.362061153890033e-04, -1.642148573775559e-02, -1.568044317361094e-02, -1.744678139345269e-02, -6.301209268501275e-04, -4.379430321804318e-04, -1.383354092125630e-01, -2.704858129528355e-03, -1.358014431510194e-01, -2.932151572680924e-03, -1.609115766239932e-04, -1.205958836055364e-02, -5.921187661273339e-04, -7.491781765844416e-04, -2.034170016017676e-03, -1.968022365301051e-04, -2.034170016017674e-03, -3.259754731379892e-01, -3.139335066760266e-07, -3.737616515320843e-07, -1.204977028068718e+01, -4.559924399592436e-07, -1.369328487948551e+00, -2.342854897755263e-05, -5.454769343335608e-08, -5.253685117236533e-08, -2.162812291890319e-07, -7.490982785734520e-08, -2.162812291890319e-07, -7.490982785734530e-08, -2.310872723160847e-04, -2.311920019690613e-04, -2.321936450343807e-04, -2.322617641953847e-04, -2.311649325068304e-04, -2.312404858133292e-04, -2.321135096106791e-04, -2.322115634841984e-04, -4.879961484479221e-04, -2.317266770183893e-04, -2.316410505458536e-04, -4.882054926856168e-04, -2.297348135331170e-04, -2.311421735746919e-04, -2.406831144217842e-04, -2.417926952379831e-04, -2.199751491064209e-04, -2.240695013700709e-04, -2.294061787864649e-04, -2.337087449669542e-04, -2.435426759999450e-04, -2.641639124623456e-03, -2.435426759999450e-04, -2.379060550715654e-04, -4.084908677045879e-03, -1.984749290175147e-02, -6.480502584658696e-03, -6.683089334887586e-03, -2.801095040938801e-03, -3.378387732934274e-03, -4.241062484899841e-03, -4.703178564450182e-03, -4.653202712553980e-03, -2.014640642022206e-02, -4.653202712553979e-03, -4.339519414858230e-03, -2.150227857655529e-04, -2.195037452514476e-04, -1.344952233432972e-01, -1.005339077676004e-03, -1.668365621428899e-04, -2.031989329320323e-04, -6.860816678751736e-04, -6.871476827383275e-04, -4.132747539798099e-04, -6.861530549989460e-04, -4.132747539798102e-04, -6.861530549989467e-04, -3.228303714073314e+01, -1.796229708099781e-08, -4.636922630821120e-08, -4.265462900325657e-08, -1.458314630016007e-07, -1.886312790634787e-07, -7.968090170469032e-05, -6.758971769825938e-01, -2.917248740333368e-08, -2.290014308291363e-07, -2.917248740333368e-08, -2.290014308291361e-07, -1.564519775795749e-02, -1.564484943408378e-02, -1.286252416565852e-02, -1.288808760686182e-02, -1.983160539830672e-02, -1.970666739122217e-02, -1.977746314944726e-02, -1.456613321592316e-02, -1.980452801724910e-02, -1.968033565964845e-02, -1.980452801724910e-02, -1.416144414913392e-02, -1.587253864163539e-02, -1.590101046474417e-02, -4.281648780557753e-03, -2.619498423429564e-02, -6.069578512738505e-03, -2.431986097731804e-02, -8.857594266393319e-03, -8.865388728413279e-03, -7.283567182561010e-03, -7.316971563551097e-03, -7.283567182561011e-03, -2.350005329694931e-02, -5.049964410144795e-03, -1.600564578451296e-02, -1.497968061878028e-03, -1.516631500292388e-03, -7.129940082659059e-02, -2.200261727266516e-03, -4.596769162591872e-02, -3.840510361802684e-03, -3.119581414613898e-03, -3.155040481913573e-03, -3.119581414613899e-03, -5.701619287669108e-02, -3.584249122677328e-03, -3.759585380677599e-03, -1.404516281424835e+00, -1.391711463467844e+00, -3.628002741962711e-05, -4.116020288953171e-05, -5.526445159110016e-03, -6.836432284031467e-03, -1.759869828841372e-04, -2.544079881535008e-04, -1.759869828841373e-04, -2.544079881535009e-04, -8.271235436698682e+00, -7.918925502147195e+00, -1.217025927813037e-09, -1.219749403547319e-09, -4.818582270800353e+01, -4.495849352159821e+01, -5.342280621683502e-01, -5.221142930065400e-01, -6.448482531231277e-08, -1.853013082314940e-07, -6.448482531231277e-08, -2.538022450106644e+01])
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
