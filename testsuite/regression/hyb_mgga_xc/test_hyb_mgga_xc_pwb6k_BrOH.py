
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data

# test_hyb_mgga_xc_pwb6k_BrOH_1_zk() not generated due to NaN in reference data

# test_hyb_mgga_xc_pwb6k_BrOH_1_vrho() not generated due to NaN in reference data

# test_hyb_mgga_xc_pwb6k_BrOH_1_vsigma() not generated due to NaN in reference data


def test_hyb_mgga_xc_pwb6k_BrOH_1_vtau():
    # Prepare the input
    inp = test_data["BrOH"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_pwb6k", 1)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vtau"].flatten()
    ref_tgt = [-3.917658360446397e-05, -3.917641123231473e-05, -3.917551531534577e-05, -3.917834055818163e-05, -3.917649376224852e-05, -3.917649376224852e-05, -9.887043367868360e-04, -9.887007300229396e-04, -9.885308710347032e-04, -9.884593417231744e-04, -9.886951608360740e-04, -9.752738205686786e-05, -1.609190699825020e-02, -4.767414586939082e-04, -3.889915744084736e-04, -4.287650898579797e-04, -4.791934508427115e-04, -4.791934508427115e-04, -2.796866843270173e-03, -2.973823813380434e-03, -1.195932061492321e-02, -4.987957033663494e-04, -2.845653237595606e-03, -2.845653237595606e-03, -2.428305778283435e-06, -2.740627258209634e-06, -4.451521022209249e-05, -1.100400507552960e-07, -2.784816841534372e-06, -2.784816841534371e-06, -2.143864118338781e-04, -2.154502290556430e-04, -2.145041838337399e-04, -4.884199834238407e-04, -2.149189159941079e-04, -2.149189159941079e-04, -2.666387509531268e-03, -2.634635771704018e-03, -2.679393442276249e-03, -2.654371911375143e-03, -2.628347316080931e-03, -2.055701099736228e-04, -3.505085372716990e-03, -5.735396896218201e-03, -2.798112242440084e-03, -4.247286853610017e-03, -4.093293584381831e-03, -1.896391590989731e-02, -3.163010342284969e-01, -1.078059862861682e-03, -3.222752639339310e-01, -6.078034475448499e-04, -5.105996904981660e-04, -5.105996904981660e-04, -1.643503726705519e+01, -1.828389036667037e-07, -3.185861618624314e-07, -6.222606556189200e-01, -1.566836490373383e+01, -1.733529809161232e-07, -1.519661643642745e-02, -1.247840677567495e-02, -1.926676861498073e-02, -1.411420724400706e-02, -1.373109088137003e-02, -1.373109088137003e-02, -1.484947018858633e-02, -4.059267473487785e-03, -5.736228631385154e-03, -8.113749529801192e-03, -6.769491196291868e-03, -2.296871231034412e-02, -4.423411688739968e-03, -8.655545137078187e-02, -2.187324795899074e-03, -4.513165412366922e-02, -2.975433254464319e-03, -2.975433254464319e-03, -2.999566309076233e-02, -3.382303611777842e-05, -6.711440762216666e-05, -5.101206674502272e-03, -4.271985534400362e-01, -2.440095858068004e-04, -1.467759903361639e-06, -5.017994313796226e-09, -6.229728725557262e-08, -2.594023333282753e-04, -1.539106561017431e-07, -1.539106561017428e-07]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
