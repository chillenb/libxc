
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_1_zk() not generated due to NaN in reference data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_1_vrho() not generated due to NaN in reference data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_1_vsigma() not generated due to NaN in reference data


def test_hyb_mgga_xc_mpwkcis1k_BrOH_1_vtau():
    # Prepare the input
    inp = test_data["BrOH"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_mpwkcis1k", 1)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vtau"].flatten()
    ref_tgt = [-5.175522598317222e-17, -1.201168587269655e-54, -1.201303003715831e-54, -1.200717677274763e-54, -1.201151621898194e-54, -1.201151621898194e-54, -7.113863825786213e-48, -7.116999856490161e-48, -7.209534039101503e-48, -7.167965819534385e-48, -7.114404650796550e-48, -1.562330689957482e-04, -1.322160013676613e-41, -1.093233025255077e-03, -8.978607803293651e-04, -9.875613880874429e-04, -1.098726184167795e-03, -1.098726184167795e-03, -8.854434091676085e-03, -9.358198685444682e-03, -1.031356765983377e-42, -2.001818339566304e-03, -8.992621473528683e-03, -8.992621473528683e-03, -6.522712446450111e-05, -7.101595986298313e-05, -4.208672156228864e-04, -5.340491699455814e-06, -7.272647954547799e-05, -7.272647954547792e-05, -6.603993771490942e-04, -6.676179664105619e-04, -6.611937313954272e-04, -3.409583914194651e-23, -6.640049445014689e-04, -6.640049445014689e-04, -2.099515867318623e-20, -1.265277580792900e-45, -1.239882987722334e-45, -1.253355918599653e-45, -1.274323221435112e-45, -3.708975286058020e-04, -9.788935844540306e-03, -2.006786601089636e-02, -7.415821546406259e-03, -1.247370348771145e-02, -1.207286632700010e-02, -6.024808015540268e-40, -2.366363995312268e-35, -3.553201089119570e-03, -2.980165053593990e-35, -1.425521021100524e-03, -2.250575635911768e-03, -2.250575635911768e-03, -4.569526706292496e-28, -8.187780551310411e-06, -1.804392444310282e-05, -3.259547190078583e-34, -3.779319673148015e-28, -8.374423750128777e-06, -1.989108020301105e-01, -9.114324069853622e-02, -2.182070827355189e-38, -1.411138836259320e-01, -1.265152894050113e-01, -1.265152894050113e-01, -1.492364744043362e-01, -1.142824212995094e-02, -1.803642232703311e-02, -3.108231067819795e-02, -2.306157371055547e-02, -3.521763409426208e-39, -1.400869608256898e-02, -1.940730063872277e-37, -6.237176711184266e-03, -2.073297621433539e-38, -8.285658732795064e-03, -8.285658732795062e-03, -2.922435215748781e-39, -3.380178655133456e-04, -5.286585777108111e-04, -1.456402540213923e-02, -1.259272141241096e-34, -1.395267261030225e-03, -3.508522469624498e-05, -6.802429297418632e-07, -4.816875592257907e-06, -1.513642060090822e-03, -8.501622889405594e-06, -8.501622889405562e-06]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
