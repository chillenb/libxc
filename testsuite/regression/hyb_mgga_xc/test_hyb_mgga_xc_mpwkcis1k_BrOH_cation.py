
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_cation_2_zk() not generated due to NaN in reference data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_cation_2_vrho() not generated due to NaN in reference data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_cation_2_vsigma() not generated due to NaN in reference data


def test_hyb_mgga_xc_mpwkcis1k_BrOH_cation_2_vtau():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_mpwkcis1k", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vtau"].flatten()
    ref_tgt = [-2.069529783687291e-16, -4.805366430552800e-54, -4.803146101293755e-54, -4.805506217654424e-54, -4.803603884082357e-54, -4.806207132442172e-54, -4.801452374594524e-54, -2.295332188270571e-05, -4.803085208243515e-54, -2.295934619614465e-05, -2.295601628015576e-05, -2.295934619614465e-05, -1.559156526747869e-04, -2.836587623311544e-47, -1.559952502327473e-04, -1.559063018884913e-04, -1.575528717119648e-04, -1.578301213379949e-04, -1.569579907408665e-04, -1.569556952313687e-04, -1.557885498267274e-04, -1.583625770125719e-04, -3.726075225040724e-22, -1.583625770125719e-04, -8.854079329725909e-16, -5.375523680036081e-41, -5.261295905664271e-41, -1.167527474127017e-03, -9.471278220670789e-04, -9.231738837923462e-04, -1.017418944713016e-03, -5.473156917419993e-41, -5.183139323587893e-41, -5.488790742893821e-41, -1.193725535367221e-03, -8.352031350023560e-04, -9.377417327957383e-36, -7.145578276713630e-03, -9.100079247243409e-36, -7.688739254991686e-03, -2.897574648161322e-04, -4.211321604057267e-42, -1.925662981139237e-03, -2.382583410448024e-03, -5.412229658844547e-03, -8.287818935185304e-04, -5.412229658844538e-03, -7.171926201054293e-35, -1.043056503979772e-05, -1.182242726448205e-05, -4.388182322165068e-28, -1.379795416650055e-05, -2.514366745636689e-32, -2.014844437335085e-04, -2.763138767754816e-06, -2.699234322509894e-06, -7.888016424905938e-06, -4.374767978748070e-06, -7.888016424905938e-06, -4.374767978748070e-06, -6.604719803837309e-04, -6.608288319051637e-04, -6.680536522851759e-04, -6.681588790821602e-04, -6.609988918800051e-04, -6.611575176518292e-04, -6.674992578564652e-04, -6.678114418132086e-04, -1.029773619496987e-47, -6.644826159774883e-04, -6.642578579529161e-04, -2.311667830134825e-38, -3.485282250581532e-04, -3.509998776864311e-04, -3.678972639713692e-04, -3.698773603530081e-04, -3.315698294418700e-04, -3.386560945624691e-04, -3.479510554206319e-04, -3.555158685619897e-04, -3.730164042021194e-04, -5.071266291628245e-45, -3.730164042021194e-04, -3.629465960072686e-04, -1.010264873717440e-02, -2.403380856545230e-39, -2.118704879107022e-02, -2.236439371347948e-02, -6.219019783575900e-03, -7.811628549830799e-03, -1.042251721913005e-02, -1.210507495776646e-02, -1.227759050907518e-02, -2.723667169448629e-39, -1.227759050907518e-02, -1.090622909184789e-02, -9.257278932168971e-04, -9.386430657131405e-04, -3.482029732516204e-36, -2.776569313996747e-03, -7.714337283044217e-04, -9.023015536465543e-04, -1.429434037963278e-03, -1.432363812539409e-03, -1.575201599812185e-03, -2.439933450526341e-03, -1.575201599812186e-03, -2.439933450526343e-03, -1.756250363576447e-26, -1.124795143323562e-06, -2.426721484691785e-06, -2.204493726078112e-06, -9.752875752963861e-06, -1.200278086848348e-05, -4.816880949836174e-04, -1.962608479966587e-33, -1.920859515723306e-06, -1.148105262175384e-05, -1.920859515723306e-06, -1.148105262175382e-05, -1.804657313074715e-01, -1.852329833356905e-01, -8.218757271877022e-02, -8.374667218903348e-02, -8.187991718803521e-38, -8.282360639775504e-38, -1.189755985723141e-37, -1.312486100928881e-01, -9.777078804229212e-38, -9.879306654022036e-38, -9.777078804229212e-38, -1.168950516309969e-01, -1.634043244060736e-01, -1.680434045054984e-01, -1.024873400775429e-02, -8.112588528076939e-39, -1.642409584742781e-02, -1.134686551465465e-38, -3.050342686368510e-02, -3.066622158929482e-02, -2.172698494884416e-02, -2.193847387449646e-02, -2.172698494884415e-02, -1.445699189618053e-38, -1.466009769354882e-02, -1.730002484129838e-39, -3.773553771338285e-03, -3.812699683302319e-03, -3.243070430410952e-37, -5.235103448120750e-03, -8.527133674678088e-38, -8.917222026014525e-03, -7.270132782562210e-03, -7.356404743546528e-03, -7.270132782562207e-03, -1.801085163507898e-37, -8.215575300613684e-03, -8.687591779943387e-03, -2.927242956799652e-32, -2.766238299896994e-32, -2.682017511922875e-04, -2.969298575335550e-04, -1.337730378987964e-02, -1.712491572466429e-02, -8.806261876648019e-04, -1.210744454043662e-03, -8.806261876648001e-04, -1.210744454043665e-03, -4.038511695722021e-29, -3.304934898402316e-29, -2.021803059702752e-07, -2.022125246254020e-07, -4.484147084231394e-25, -3.463979495438036e-25, -1.038892724751392e-33, -1.068824373767812e-33, -4.444059982438934e-06, -1.000133281188395e-05, -4.444059982438930e-06, -3.484435772505778e-26]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
