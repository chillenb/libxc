
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data

# test_hyb_mgga_xc_pwb6k_BrOH_cation_restr_1_zk() not generated due to NaN in reference data

# test_hyb_mgga_xc_pwb6k_BrOH_cation_restr_1_vrho() not generated due to NaN in reference data

# test_hyb_mgga_xc_pwb6k_BrOH_cation_restr_1_vsigma() not generated due to NaN in reference data


def test_hyb_mgga_xc_pwb6k_BrOH_cation_restr_1_vtau():
    # Prepare the input
    inp = test_data["BrOH_cation_restr"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_pwb6k", 1)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vtau"].flatten()
    ref_tgt = [-3.917476094289759e-05, -3.917456290562790e-05, -3.917362137932091e-05, -3.917656909685308e-05, -3.917503319995349e-05, -3.917503319995349e-05, -9.886250054216535e-04, -9.886212963460517e-04, -9.884934715953247e-04, -9.883894443422218e-04, -9.885791352840607e-04, -9.796592710659333e-05, -1.592853529406604e-02, -4.981790074154723e-04, -4.058715395088206e-04, -4.494982108610576e-04, -4.390685516820484e-04, -4.390685516820484e-04, -1.972843211278853e-03, -2.119158565507498e-03, -1.238371199050499e-02, -5.344783008224585e-04, -9.686113457391137e-04, -9.686113457391131e-04, -2.726308419650085e-07, -3.279662974944869e-07, -1.695104632069734e-05, -4.243870314591471e-08, -1.128745458178002e-07, -1.128745458178002e-07, -2.143459011006779e-04, -2.154433245687091e-04, -2.144094604158065e-04, -4.880334250829034e-04, -2.148947450657560e-04, -2.148947450657560e-04, -2.661303104094819e-03, -2.628685277403782e-03, -2.685517452651573e-03, -2.656249081361493e-03, -2.631732964054590e-03, -2.041226933905505e-04, -3.635059009234037e-03, -6.000316210329199e-03, -2.661445047002744e-03, -3.937877917531343e-03, -3.985144996985791e-03, -1.929735692306609e-02, -3.460331214744272e-01, -8.114452603844576e-04, -3.870885540310496e-01, -6.091765871396671e-04, -4.309366205151046e-04, -4.309366205151046e-04, -3.156062561985356e+01, -3.517405342012924e-08, -1.323880795080586e-07, -6.787815240163054e-01, -2.642940795733916e+01, -8.642067994570058e-08, -1.523811491998909e-02, -1.228047097151356e-02, -1.976885817934797e-02, -1.407295549760786e-02, -1.363458319651309e-02, -1.363458319651309e-02, -1.542499876493468e-02, -3.733883180083599e-03, -5.416693378495011e-03, -8.094468714225877e-03, -6.563433806780389e-03, -2.357026059631729e-02, -4.675908186195247e-03, -9.384751940055865e-02, -1.776777986256233e-03, -4.576736496754310e-02, -2.619738788965605e-03, -2.619738788965605e-03, -3.001494066796270e-02, -1.530794759475494e-05, -3.073378215768709e-05, -5.278483023060763e-03, -4.830320359587126e-01, -1.700306325587821e-04, -3.408773782117270e-07, -9.657138171287186e-10, -2.365795669631987e-08, -1.569900622512836e-04, -9.872713157084291e-08, -9.872713157084299e-08]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
