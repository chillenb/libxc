
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_cation_restr_1_zk() not generated due to NaN in reference data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_cation_restr_1_vrho() not generated due to NaN in reference data

# test_hyb_mgga_xc_mpwkcis1k_BrOH_cation_restr_1_vsigma() not generated due to NaN in reference data


def test_hyb_mgga_xc_mpwkcis1k_BrOH_cation_restr_1_vtau():
    # Prepare the input
    inp = test_data["BrOH_cation_restr"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_mpwkcis1k", 1)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vtau"].flatten()
    ref_tgt = numpy.asarray([-5.175124018818662e-17, -1.201081485491919e-54, -1.201226310989535e-54, -1.200613426068002e-54, -1.200940109602941e-54, -1.200940109602941e-54, -7.092832717355496e-48, -7.096399835508950e-48, -7.189938662916562e-48, -7.145662123887845e-48, -7.157634647176004e-48, -1.570681906032675e-04, -1.330665916207460e-41, -1.141151050638042e-03, -9.351654864830958e-04, -1.033665079407575e-03, -1.010039532297921e-03, -1.010039532297921e-03, -6.443054316734108e-03, -6.862676511509530e-03, -1.011243830855818e-42, -2.141296568889132e-03, -3.513962717226630e-03, -3.513962717226628e-03, -1.113747666784839e-05, -1.285358397700124e-05, -1.871215929204720e-04, -2.731210055686527e-06, -5.997267730805711e-06, -5.997267730805711e-06, -6.606502719026901e-04, -6.681062220702199e-04, -6.610781451061062e-04, -3.404849205645712e-23, -6.643701544461154e-04, -6.643701544461154e-04, -2.100752497188891e-20, -1.266524119605201e-45, -1.233434905637224e-45, -1.248898268378662e-45, -1.268900033990554e-45, -3.679661437883065e-04, -1.027198398381618e-02, -2.176307752507794e-02, -6.994509285566977e-03, -1.126065058674721e-02, -1.161276130453996e-02, -6.155794376268553e-40, -2.756508525061479e-35, -2.776703418314603e-03, -4.347252453649545e-35, -1.430896341060702e-03, -1.979413413571794e-03, -1.979413413571795e-03, -3.793601090744999e-27, -2.307757558715848e-06, -1.088377736402031e-05, -4.686082072936305e-34, -6.787365965659410e-27, -6.068692026780468e-06, -1.828367928679078e-01, -8.296590621864157e-02, -2.058752152372705e-38, -1.299368248367590e-01, -1.156717507867593e-01, -1.156717507867593e-01, -1.657076979735148e-01, -1.031291895471192e-02, -1.657467596439351e-02, -3.058504472377275e-02, -2.183293586984918e-02, -3.635669854835193e-39, -1.529913850559431e-02, -2.160689822201884e-37, -5.137442152746525e-03, -2.081979556657958e-38, -7.313039133909023e-03, -7.313039133909021e-03, -2.832346116015480e-39, -1.741057146410630e-04, -2.827004030118171e-04, -1.512087306853742e-02, -1.730523451576089e-34, -1.041049664962979e-03, -1.060381614369193e-05, -2.021954344342878e-07, -2.550248300690063e-06, -9.979239887385860e-04, -7.402818434091084e-06, -7.402818434091081e-06])
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
