
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data


def test_hyb_mgga_xc_pw86b95_BrOH_cation_2_zk():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_pw86b95", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["zk"].flatten()
    ref_tgt = numpy.asarray([-1.419746477946313e+01, -1.419750285029246e+01, -1.419768473773145e+01, -inf, -inf, -inf, -1.738797475700658e+18, -inf, -inf, -inf, -inf, -inf, -5.766208811938319e-01, -inf, -inf, -inf, -5.778834905360376e-01, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -4.245346694144932e-01, -inf, -4.244633279374111e-01, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -1.456197890423098e+00, -inf, -inf, -inf, -inf, -8.611029195255842e+00, -inf, -2.266131661791348e+01, -4.754740092712615e-01, -inf, -inf])
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-08

# test_hyb_mgga_xc_pw86b95_BrOH_cation_2_vrho() not generated due to NaN in reference data

# test_hyb_mgga_xc_pw86b95_BrOH_cation_2_vsigma() not generated due to NaN in reference data


def test_hyb_mgga_xc_pw86b95_BrOH_cation_2_vtau():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_mgga_xc_pw86b95", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vtau"].flatten()
    ref_tgt = numpy.asarray([-3.917471522261091e-05, -3.917480666326107e-05, -3.917448580994359e-05, -3.917464000171363e-05, -3.917370661284050e-05, -3.917353614629186e-05, -3.917629863541938e-05, -1.378716895281572e-05, -3.917458068216103e-05, -1.378888624786437e-05, -1.378769232225893e-05, -1.378888624786437e-05, -1.086307176581860e-04, -9.886367289552889e-04, -1.086762179304513e-04, -1.086254899047673e-04, -1.095650411891742e-04, -1.097228200789897e-04, -1.092250898329168e-04, -1.092236389627861e-04, -1.085596230900190e-04, -1.100246529098191e-04, -9.889006949787293e-04, -1.100246529098191e-04, -1.598021136832418e-02, -1.587732578179836e-02, -1.602089576144582e-02, -5.816541241886695e-04, -4.710803402561351e-04, -4.585272505900273e-04, -5.059211528733358e-04, -1.642148573775559e-02, -1.568044317361094e-02, -1.744678139345269e-02, -5.953671632135174e-04, -4.125746990187820e-04, -1.383354092125630e-01, -2.545594631964812e-03, -1.358014431510194e-01, -2.761031995452824e-03, -1.511044147610398e-04, -1.205958836055364e-02, -5.537625639604731e-04, -7.010054770280826e-04, -1.911908828015881e-03, -1.836805468040011e-04, -1.911908828015880e-03, -3.259754731379892e-01, -2.925053862903257e-07, -3.482503482707788e-07, -1.204977028068718e+01, -4.248691717209683e-07, -1.369328487948551e+00, -2.183566043800917e-05, -5.082405532873740e-08, -4.895047635855906e-08, -2.015180548687125e-07, -6.979620591902826e-08, -2.015180548687125e-07, -6.979620591902835e-08, -2.259855269312626e-04, -2.260881212058678e-04, -2.270958956349527e-04, -2.271617442885251e-04, -2.260634434835929e-04, -2.261367632496152e-04, -2.270154474710338e-04, -2.271113465430546e-04, -4.879961484479221e-04, -2.266247031240197e-04, -2.265412913612535e-04, -4.882054926856168e-04, -2.184886358410226e-04, -2.198407711106584e-04, -2.290425707302488e-04, -2.301086062234988e-04, -2.090918765935176e-04, -2.130296248907240e-04, -2.181735888507632e-04, -2.223153613090707e-04, -2.317988057317349e-04, -2.641639124623456e-03, -2.317988057317349e-04, -2.263597005645318e-04, -3.929170235622424e-03, -1.984749290175147e-02, -6.303138297431693e-03, -6.504666655764184e-03, -2.674119186441406e-03, -3.235583825171795e-03, -4.075837800125147e-03, -4.531443570850382e-03, -4.490464816718589e-03, -2.014640642022206e-02, -4.490464816718591e-03, -4.176864456846772e-03, -2.006900302560310e-04, -2.048784310581295e-04, -1.344952233432972e-01, -9.423807568459265e-04, -1.556672292865342e-04, -1.896343766166793e-04, -6.620210932860224e-04, -6.630589334612137e-04, -3.860796718241865e-04, -6.415843739916735e-04, -3.860796718241866e-04, -6.415843739916738e-04, -3.228303714073314e+01, -1.673609233594659e-08, -4.320386791748026e-08, -3.974284072041291e-08, -1.358766007760613e-07, -1.757549224413043e-07, -7.429711701765857e-05, -6.758971769825938e-01, -2.718102425525728e-08, -2.133696627854412e-07, -2.718102425525730e-08, -2.133696627854409e-07, -1.552306914455465e-02, -1.552582117956704e-02, -1.268299878892380e-02, -1.271124538750983e-02, -1.983160539830672e-02, -1.970666739122217e-02, -1.977746314944726e-02, -1.442137908417866e-02, -1.980452801724910e-02, -1.968033565964845e-02, -1.980452801724910e-02, -1.400805702816674e-02, -1.573383149051152e-02, -1.576560080490087e-02, -4.103405104669137e-03, -2.619498423429564e-02, -5.855996421654132e-03, -2.431986097731804e-02, -8.622152563779987e-03, -8.630992571357915e-03, -7.055802023881759e-03, -7.089637270769390e-03, -7.055802023881757e-03, -2.350005329694931e-02, -4.894091693419611e-03, -1.600564578451296e-02, -1.408010276920654e-03, -1.425686809925916e-03, -7.129940082659059e-02, -2.075504996960211e-03, -4.596769162591872e-02, -3.651606863563957e-03, -2.954446459371496e-03, -2.988292442326723e-03, -2.954446459371497e-03, -5.701619287669108e-02, -3.420976223119365e-03, -3.590918706190889e-03, -1.404516281424835e+00, -1.391711463467844e+00, -3.381789829807270e-05, -3.836836569884722e-05, -5.271356587168376e-03, -6.540211187909225e-03, -1.641862007921526e-04, -2.374257902366361e-04, -1.641862007921527e-04, -2.374257902366361e-04, -8.271235436698682e+00, -7.918925502147195e+00, -1.133943442251980e-09, -1.136480995602016e-09, -4.818582270800353e+01, -4.495849352159821e+01, -5.342280621683502e-01, -5.221142930065400e-01, -6.008281617989573e-08, -1.726523620548169e-07, -6.008281617989576e-08, -2.538022450106644e+01])
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
