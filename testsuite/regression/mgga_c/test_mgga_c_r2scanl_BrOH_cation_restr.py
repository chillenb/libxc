
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data


def test_mgga_c_r2scanl_BrOH_cation_restr_1_zk():
    # Prepare the input
    inp = test_data["BrOH_cation_restr"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("mgga_c_r2scanl", 1)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["zk"].flatten()
    ref_tgt = numpy.asarray([-3.917059189129131e-02, -3.917142256909407e-02, -3.917378613286349e-02, -3.916145054228452e-02, -3.916810271404392e-02, -3.916810271404392e-02, -3.002806507594285e-02, -3.003211447950831e-02, -3.012622769733824e-02, -2.718159088727412e-02, -3.003294688946453e-02, -2.718149221419527e-02, -2.190410188981363e-02, -2.444898150670135e-02, -2.437478208419472e-02, -2.439770129896703e-02, -2.439285301902801e-02, -2.439285301902801e-02, -1.412812336747609e-02, -1.903199446230929e-02, -2.262069977697724e-02, -1.738603582341406e-02, -1.805958013837064e-02, -1.805958013837064e-02, -2.364707330232545e-03, -2.473925114417483e-03, -9.205924852952787e-03, -1.438993571137558e-03, -1.773848626627636e-03, -1.773848626627636e-03, -2.749636667103524e-02, -2.749649095497407e-02, -2.749637286194770e-02, -4.719879870614963e-02, -2.749642942280822e-02, -2.749642942280822e-02, -2.272114796796031e-02, -2.279402728615332e-02, -2.256527373581288e-02, -2.263074783993416e-02, -2.283647667815250e-02, -2.655878133118041e-02, -2.407074065984552e-02, -2.431042777413595e-02, -2.383472879713559e-02, -2.395392487866398e-02, -2.411798567154316e-02, -3.042100775515744e-02, -7.882224560082154e-03, -1.895868099500740e-02, -7.406917673241164e-03, -7.067721926349735e-02, -1.615045578894735e-02, -1.615045578894735e-02, -1.557385206348949e-04, -1.409180374383216e-03, -1.097540503015724e-03, -5.255962619890100e-03, -2.658029180644091e-04, -1.305936599175581e-03, -2.408509806094272e-02, -2.406804141438211e-02, -5.153822935656433e-02, -2.407900519624186e-02, -2.407653230127249e-02, -2.407653230127249e-02, -2.400307340846287e-02, -2.352174592178512e-02, -2.367170868466579e-02, -2.381016737511136e-02, -2.374066262341022e-02, -2.882989004637464e-02, -2.444168339042134e-02, -1.472436835921187e-02, -2.105462980489145e-02, -1.978053492042297e-02, -2.167148398495312e-02, -2.167148398495312e-02, -2.087667775297390e-02, -8.955805786680513e-03, -1.078799098108116e-02, -2.210352810415680e-02, -6.828820886569165e-03, -1.367814733244875e-02, -3.188885889055185e-03, -4.014228474600732e-04, -8.521389097357641e-05, -1.327746276521931e-02, -1.214904272883642e-03, -1.214904272883642e-03])
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-08

# test_mgga_c_r2scanl_BrOH_cation_restr_1_vrho() not generated due to NaN in reference data

# test_mgga_c_r2scanl_BrOH_cation_restr_1_vsigma() not generated due to NaN in reference data

# test_mgga_c_r2scanl_BrOH_cation_restr_1_vlapl() not generated due to NaN in reference data
