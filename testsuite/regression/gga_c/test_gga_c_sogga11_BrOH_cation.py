
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data


def test_gga_c_sogga11_BrOH_cation_2_zk():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("gga_c_sogga11", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["zk"].flatten()
    ref_tgt = [-4.573004233962779e-01, -4.572900967574459e-01, -4.572628812255169e-01, -4.574161527864320e-01, -4.573331756312586e-01, -4.573331756312586e-01, -2.016757424372120e-01, -2.016561711483281e-01, -2.012030794941200e-01, -2.020096988595315e-01, -2.016552529757514e-01, -2.016552529757514e-01, -6.749031107644914e-02, -6.845476601586054e-02, -9.453887436419257e-02, -9.400711265661217e-02, -9.296239522813300e-02, -9.296239522813300e-02, -6.972610817594833e-02, -6.815592821892277e-02, -6.983447277794538e-02, -7.048373828304884e-02, -5.720113335221647e-02, -5.720113335221650e-02, -4.003282483866966e-02, -4.169950760201352e-02, -1.249926283200531e-01, -2.520918595508596e-02, -2.613212623242525e-02, -2.613212623242525e-02, -1.725770296028331e-01, -1.711821070343479e-01, -1.725199562663438e-01, -1.712886120876255e-01, -1.718678502901413e-01, -1.718678502901413e-01, -1.939497349664475e-01, -1.937754440794296e-01, -1.953687861777750e-01, -1.951435738114392e-01, -1.932428579626132e-01, -1.932428579626132e-01, -4.616118326308880e-02, -6.817329387589174e-02, -4.312595914524531e-02, -6.498448148180971e-02, -4.895478506907574e-02, -4.895478506907550e-02, -9.965677010330361e-02, -7.808376699463079e-02, -1.038286169235432e-01, -9.032264817770629e-02, -7.282010870012148e-02, -7.282010870012148e-02, -2.005140634058988e-02, -2.470857359183531e-02, -1.939445730780131e-02, -1.204129042440937e-01, -2.160481189905396e-02, -2.160481189905396e-02, -6.322871066544959e-02, -6.589297417461028e-02, -6.511638634453872e-02, -6.422448817378142e-02, -6.468424257651238e-02, -6.468424257651238e-02, -6.235749719678672e-02, -4.649552245506675e-02, -4.166663872300212e-02, -5.627275008940130e-02, -4.740086304732305e-02, -4.740086304732305e-02, -6.942265975822247e-02, -8.329894581280557e-02, -7.846414158891105e-02, -3.866097463702220e-02, -5.813724679022735e-02, -5.813724679022714e-02, -4.406066846798679e-02, -1.249144461563025e-01, -1.323327556833713e-01, -3.518426681694739e-02, -9.604802171199128e-02, -9.604802171199127e-02, -5.295682957121641e-02, -7.477831891129145e-03, -1.474311914598448e-02, -1.019565042047488e-01, -2.039848435831526e-02, -2.039848435831528e-02]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-08


def test_gga_c_sogga11_BrOH_cation_2_vrho():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("gga_c_sogga11", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vrho"].flatten()
    ref_tgt = [4.374982424840135e-01, 4.374977439081466e-01, 4.374675836815780e-01, 4.374667429499201e-01, 4.373844465696327e-01, 4.373853760708724e-01, 4.378438059438604e-01, 4.378408567943100e-01, 4.375973859311489e-01, 4.375924512639505e-01, 4.375973859311489e-01, 4.375924512639505e-01, 1.599196039191736e-02, 1.598838604480107e-02, 1.613772744717532e-02, 1.613364746893697e-02, 1.949290637769430e-02, 1.949825013320142e-02, 1.356346786617169e-02, 1.356716784300283e-02, 1.610287222155182e-02, 1.620083350524740e-02, 1.610287222155182e-02, 1.620083350524740e-02, 1.323425861919048e-01, 1.324295694078815e-01, 1.344946264575802e-01, 1.346022674738726e-01, 1.288734943695989e-01, 1.284476050822819e-01, 1.308024317843918e-01, 1.309315605385495e-01, 1.335142412278815e-01, 1.297262167922638e-01, 1.335142412278815e-01, 1.297262167922638e-01, -6.012025327359366e-03, -2.096859715442309e-03, 9.577023608838511e-03, 1.353994482608498e-02, 1.357989570290924e-01, 1.365720536945129e-01, -2.592539183046378e-02, -2.433059366550172e-02, -2.861294170411822e-02, -1.094749605997296e-01, -2.861294170411789e-02, -1.094749605997292e-01, -5.234706718605973e-02, -4.793616635515265e-02, -5.466824052666550e-02, -4.944575319045005e-02, -8.437953889851574e-02, -7.242340667953315e-02, -3.192780391772214e-02, -3.267193117449320e-02, -2.873282875923980e-02, -5.663782157424469e-02, -2.873282875923980e-02, -5.663782157424469e-02, 2.414522205557039e-01, 2.414260080191128e-01, 2.442720559190262e-01, 2.442459524998902e-01, 2.415712382136435e-01, 2.415445707749080e-01, 2.440624289210914e-01, 2.440368537991652e-01, 2.429060643726003e-01, 2.428797777213977e-01, 2.429060643726003e-01, 2.428797777213977e-01, -1.333240199098157e-01, -1.333407709222192e-01, -1.364245859916359e-01, -1.365151692713504e-01, -1.218826747562018e-01, -1.213168903432162e-01, -1.264542743362164e-01, -1.258612981151325e-01, -1.376160182322293e-01, -1.390778190582800e-01, -1.376160182322293e-01, -1.390778190582800e-01, -1.088085456059459e-01, -1.091370991858002e-01, -7.276138718318099e-02, -7.270035599452213e-02, -9.139859823536246e-02, -8.745098148042496e-02, -8.309670171084661e-02, -7.868280941938934e-02, -1.199767806023651e-01, -1.269111573573339e-01, -1.199767806023647e-01, -1.269111573573340e-01, 1.068097324962903e-01, 1.075825505308737e-01, -5.514762120560648e-02, -5.443110004060632e-02, 1.003020203068871e-01, 1.050187317166655e-01, -1.692317346340797e-01, -1.693260088715252e-01, 3.957179194454860e-02, 4.422921821713595e-02, 3.957179194454860e-02, 4.422921821713595e-02, -2.654901823507025e-02, -2.521147998740435e-02, -3.198046242874104e-02, -3.132941350901821e-02, -2.584892557361471e-02, -2.392790792043474e-02, 3.194499236318218e-02, 3.288910562226954e-02, -3.641196380920077e-02, -2.415252768458616e-02, -3.641196380920077e-02, -2.415252768458615e-02, -6.829626679644822e-02, -6.781255970054170e-02, -6.803145892138511e-02, -6.752888974161149e-02, -6.470002728122748e-02, -6.420896748024374e-02, -6.493578909073647e-02, -6.445353541719813e-02, -6.448375151350461e-02, -6.399778622845007e-02, -6.448375151350461e-02, -6.399778622845007e-02, -7.100860708843508e-02, -7.059352071490874e-02, 5.646414953535580e-02, 5.661115229105038e-02, -7.691481872776680e-02, -7.646974365408811e-02, -1.229405764768476e-01, -1.224280664682252e-01, -1.202552098566380e-01, -1.197648518656405e-01, -1.202552098566380e-01, -1.197648518656405e-01, -7.923791973772884e-02, -7.901085329349922e-02, -5.227817373132816e-02, -5.141843371359096e-02, 3.897253674800621e-02, 3.986456488636550e-02, 3.345003430431430e-02, 3.364784205726422e-02, 1.075918679411452e-01, 1.075841872917251e-01, 1.075918679411464e-01, 1.075841872917253e-01, 4.671149238381697e-02, 4.695833153787662e-02, -8.753407828679524e-02, -8.601164340715364e-02, -4.386475436275562e-02, -3.690625440891819e-02, -6.838366463856689e-02, -6.706811302734711e-02, 9.096087624421434e-02, 9.554607266206605e-02, 9.096087624421391e-02, 9.554607266206570e-02, -6.623094412995054e-02, -6.274277963164222e-02, -9.802751940587932e-03, -9.774483174526501e-03, -1.995151654077272e-02, -1.840163387859182e-02, 8.400995788860766e-02, 8.559373590487473e-02, -3.327905515655205e-02, -2.299537295519683e-02, -3.327905515655206e-02, -2.299537295519683e-02]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05


def test_gga_c_sogga11_BrOH_cation_2_vsigma():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("gga_c_sogga11", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vsigma"].flatten()
    ref_tgt = [-2.601945131534495e-09, -5.203890263068989e-09, -2.601945131534495e-09, -2.601868252959940e-09, -5.203736505919880e-09, -2.601868252959940e-09, -2.601601843690346e-09, -5.203203687380693e-09, -2.601601843690346e-09, -2.602743623750328e-09, -5.205487247500656e-09, -2.602743623750328e-09, -2.602134830135913e-09, -5.204269660271825e-09, -2.602134830135913e-09, -2.602134830135913e-09, -5.204269660271825e-09, -2.602134830135913e-09, -4.145254634254598e-06, -8.290509268509196e-06, -4.145254634254598e-06, -4.148249020253895e-06, -8.296498040507789e-06, -4.148249020253895e-06, -4.217185282898286e-06, -8.434370565796572e-06, -4.217185282898286e-06, -4.092615761747383e-06, -8.185231523494766e-06, -4.092615761747383e-06, -4.148176042406310e-06, -8.296352084812621e-06, -4.148176042406310e-06, -4.148176042406310e-06, -8.296352084812621e-06, -4.148176042406310e-06, -8.062868131287745e-03, -1.612573626257549e-02, -8.062868131287745e-03, -8.133105688681906e-03, -1.626621137736381e-02, -8.133105688681906e-03, -7.646918050254286e-03, -1.529383610050857e-02, -7.646918050254286e-03, -7.490023200352736e-03, -1.498004640070547e-02, -7.490023200352736e-03, -7.610247080884907e-03, -1.522049416176981e-02, -7.610247080884907e-03, -7.610247080884907e-03, -1.522049416176981e-02, -7.610247080884907e-03, -6.113169902791759e-01, -1.222633980558352e+00, -6.113169902791759e-01, -7.160167900254645e-01, -1.432033580050929e+00, -7.160167900254645e-01, -4.328534614805607e-03, -8.657069229611214e-03, -4.328534614805607e-03, -8.319537915478870e-01, -1.663907583095774e+00, -8.319537915478870e-01, -3.184184012971673e-01, -6.368368025943346e-01, -3.184184012971673e-01, -3.184184012971717e-01, -6.368368025943435e-01, -3.184184012971717e-01, -2.066514875663123e+02, -4.133029751326246e+02, -2.066514875663123e+02, -2.143299153885697e+02, -4.286598307771393e+02, -2.143299153885697e+02, -4.725704011144247e+01, -9.451408022288494e+01, -4.725704011144247e+01, -2.206875553192757e+02, -4.413751106385513e+02, -2.206875553192757e+02, -2.039314311421251e+02, -4.078628622842501e+02, -2.039314311421251e+02, -2.039314311421255e+02, -4.078628622842509e+02, -2.039314311421255e+02, -1.912268155111359e-06, -3.824536310222718e-06, -1.912268155111359e-06, -1.931851552664600e-06, -3.863703105329199e-06, -1.931851552664600e-06, -1.913069550580341e-06, -3.826139101160681e-06, -1.913069550580341e-06, -1.930365623947963e-06, -3.860731247895927e-06, -1.930365623947963e-06, -1.922303069936994e-06, -3.844606139873987e-06, -1.922303069936994e-06, -1.922303069936994e-06, -3.844606139873987e-06, -1.922303069936994e-06, -1.008261086297537e-05, -2.016522172595073e-05, -1.008261086297537e-05, -9.532914985415540e-06, -1.906582997083108e-05, -9.532914985415540e-06, -1.147171063392578e-05, -2.294342126785157e-05, -1.147171063392578e-05, -1.074729102850328e-05, -2.149458205700656e-05, -1.074729102850328e-05, -9.401150792313117e-06, -1.880230158462623e-05, -9.401150792313117e-06, -9.401150792313117e-06, -1.880230158462623e-05, -9.401150792313117e-06, 8.430589553838765e-03, 1.686117910767753e-02, 8.430589553838765e-03, -1.351594925233437e-03, -2.703189850466873e-03, -1.351594925233437e-03, 7.766374678183494e-03, 1.553274935636699e-02, 7.766374678183494e-03, 3.723501448120406e-03, 7.447002896240812e-03, 3.723501448120406e-03, 1.040247513852442e-02, 2.080495027704884e-02, 1.040247513852442e-02, 1.040247513852439e-02, 2.080495027704879e-02, 1.040247513852439e-02, -8.038358845707069e+00, -1.607671769141414e+01, -8.038358845707069e+00, -1.748314084740793e-01, -3.496628169481587e-01, -1.748314084740793e-01, -1.043373547445064e+01, -2.086747094890129e+01, -1.043373547445064e+01, 1.099563275114252e-04, 2.199126550228504e-04, 1.099563275114252e-04, -3.527390672997972e+00, -7.054781345995945e+00, -3.527390672997972e+00, -3.527390672997972e+00, -7.054781345995945e+00, -3.527390672997972e+00, -3.086106906907324e+02, -6.172213813814648e+02, -3.086106906907324e+02, -2.611429644883672e+02, -5.222859289767345e+02, -2.611429644883672e+02, -1.734449035467506e+03, -3.468898070935011e+03, -1.734449035467506e+03, -2.969811933970038e+01, -5.939623867940077e+01, -2.969811933970038e+01, -7.054964481638539e+02, -1.410992896327708e+03, -7.054964481638539e+02, -7.054964481638517e+02, -1.410992896327703e+03, -7.054964481638517e+02, -4.695318722454994e-03, -9.390637444909988e-03, -4.695318722454994e-03, -3.624287929784516e-03, -7.248575859569032e-03, -3.624287929784516e-03, -6.454466054067530e-03, -1.290893210813506e-02, -6.454466054067530e-03, -7.237030548995584e-03, -1.447406109799117e-02, -7.237030548995584e-03, -7.083970070350408e-03, -1.416794014070082e-02, -7.083970070350408e-03, -7.083970070350408e-03, -1.416794014070082e-02, -7.083970070350408e-03, 2.601229666747527e-03, 5.202459333495053e-03, 2.601229666747527e-03, -2.036091055601449e-02, -4.072182111202898e-02, -2.036091055601449e-02, 6.765614611665927e-03, 1.353122922333185e-02, 6.765614611665927e-03, 1.964542100884422e-02, 3.929084201768844e-02, 1.964542100884422e-02, 1.777755167412411e-02, 3.555510334824823e-02, 1.777755167412411e-02, 1.777755167412411e-02, 3.555510334824823e-02, 1.777755167412411e-02, 3.502279956700697e-04, 7.004559913401393e-04, 3.502279956700697e-04, -1.002109817822624e-01, -2.004219635645248e-01, -1.002109817822624e-01, -1.833833331522058e-01, -3.667666663044115e-01, -1.833833331522058e-01, -7.025606643040586e-02, -1.405121328608117e-01, -7.025606643040586e-02, -1.942067775715035e-01, -3.884135551430070e-01, -1.942067775715035e-01, -1.942067775715021e-01, -3.884135551430042e-01, -1.942067775715021e-01, -2.654444872443604e-02, -5.308889744887208e-02, -2.654444872443604e-02, -4.530909541211572e+01, -9.061819082423143e+01, -4.530909541211572e+01, -3.327389539227459e+01, -6.654779078454918e+01, -3.327389539227459e+01, 4.214370646636346e-02, 8.428741293272693e-02, 4.214370646636346e-02, -1.920405289594297e+01, -3.840810579188594e+01, -1.920405289594297e+01, -1.920405289594299e+01, -3.840810579188597e+01, -1.920405289594299e+01, -1.479147563996042e+02, -2.958295127992083e+02, -1.479147563996042e+02, -1.634927086305986e+03, -3.269854172611972e+03, -1.634927086305986e+03, -7.000731191828199e+02, -1.400146238365640e+03, -7.000731191828199e+02, -2.267216338391667e+01, -4.534432676783334e+01, -2.267216338391667e+01, -9.236158527074041e+02, -1.847231705414808e+03, -9.236158527074041e+02, -9.236158527074108e+02, -1.847231705414822e+03, -9.236158527074108e+02]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
