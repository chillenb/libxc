
import pylibxc
import pytest
import numpy
from pylibxc.example_densities import test_data


def test_hyb_gga_xc_lcy_pbe_BrOH_cation_2_zk():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_gga_xc_lcy_pbe", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["zk"].flatten()
    ref_tgt = [-2.060009253876557e+01, -2.060012165314117e+01, -2.060031607653446e+01, -2.059988157860398e+01, -2.060010000645872e+01, -2.060010000645872e+01, -3.142808966266442e+00, -3.142783118597500e+00, -3.142270159946721e+00, -3.143815607618494e+00, -3.142861128223822e+00, -3.142861128223822e+00, -4.354822217105059e-01, -4.349330838276159e-01, -4.223398282546162e-01, -4.271234621290143e-01, -4.269063110572269e-01, -4.269063110572269e-01, -4.208776177982310e-02, -4.382522946093481e-02, -5.362604404514821e-01, -2.083575387546275e-02, -3.610425762544278e-02, -3.610425762544276e-02, -2.452140086313159e-06, -2.866609025298555e-06, -4.763883290500214e-04, -4.683525557757596e-07, -1.368782227902356e-06, -1.368782227902356e-06, -4.726895835777225e+00, -4.726649695559839e+00, -4.726893461932665e+00, -4.726675999996652e+00, -4.726765944300142e+00, -4.726765944300142e+00, -1.746258521505893e+00, -1.757549192595931e+00, -1.743640259060151e+00, -1.753623425467123e+00, -1.753779639632987e+00, -1.753779639632987e+00, -3.604257620336935e-01, -4.080678811843723e-01, -3.233215542918514e-01, -3.460516453958424e-01, -3.693188940258191e-01, -3.693188940258192e-01, -7.687556448736995e-03, -3.997158870313733e-02, -6.225592777633434e-03, -1.565214002002536e+00, -1.225180073449093e-02, -1.225180073449093e-02, -2.156963138035309e-07, -4.375601285233534e-07, -1.975244712339716e-07, -1.994582476459787e-03, -4.092329723521994e-07, -4.092329723565363e-07, -3.708839812993818e-01, -3.653767006506356e-01, -3.672240571681734e-01, -3.688200459648028e-01, -3.680131757488382e-01, -3.680131757488382e-01, -3.586044157382027e-01, -2.795080942382043e-01, -3.000598798200971e-01, -3.217787782294588e-01, -3.105155245571593e-01, -3.105155245571593e-01, -4.338608163253500e-01, -6.691656043230015e-02, -9.737159496321714e-02, -1.637155022155609e-01, -1.272718523963111e-01, -1.272718523963111e-01, -2.471381072209329e-01, -4.148758442069691e-04, -1.044052155387988e-03, -1.573384018560209e-01, -4.094443615222063e-03, -4.094443615222006e-03, -6.857622395903429e-06, -8.350779494049300e-09, -7.791060708416992e-08, -3.392393416393966e-03, -3.150422160154840e-07, -3.150422160113631e-07]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-08


def test_hyb_gga_xc_lcy_pbe_BrOH_cation_2_vrho():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_gga_xc_lcy_pbe", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vrho"].flatten()
    ref_tgt = [-2.494882986654566e+01, -2.494880027244171e+01, -2.494894509729335e+01, -2.494888433284391e+01, -2.494928565405451e+01, -2.494937830723030e+01, -2.494798025707042e+01, -2.494771973223257e+01, -2.494889568640573e+01, -2.494836466584644e+01, -2.494889568640573e+01, -2.494836466584644e+01, -3.854639912895175e+00, -3.854772246928241e+00, -3.854681808977540e+00, -3.854818403098567e+00, -3.855737272641963e+00, -3.855997603887213e+00, -3.854561274730991e+00, -3.854820319460946e+00, -3.853922328441360e+00, -3.855789205137703e+00, -3.853922328441360e+00, -3.855789205137703e+00, -6.110420644726615e-01, -6.138593544263207e-01, -6.095863241239956e-01, -6.130248358185653e-01, -5.856666653896470e-01, -5.815508634850624e-01, -5.891336816632180e-01, -5.904441916679123e-01, -6.099665260253838e-01, -5.714066052417104e-01, -6.099665260253838e-01, -5.714066052417104e-01, -8.469833726052663e-02, -8.813599772769760e-02, -8.797446434544776e-02, -9.191809775793298e-02, -7.241055852963429e-01, -7.517496499901781e-01, -4.328177103322461e-02, -4.421690964516490e-02, -7.217594543502640e-02, -3.224282493067295e-02, -7.217594543502633e-02, -3.224282493067290e-02, -4.447658562169767e-06, -5.327511341745756e-06, -5.123907356334316e-06, -6.285196484069616e-06, -9.022985568062130e-04, -1.047797380250391e-03, -9.613541857462593e-07, -9.142518111066066e-07, -3.138894636910968e-06, -5.860061498698308e-07, -3.138894636908800e-06, -5.860061498676625e-07, -6.009895988659083e+00, -6.008389153982487e+00, -6.012654015880689e+00, -6.011060713522897e+00, -6.010046192967875e+00, -6.008482432534359e+00, -6.012417888892415e+00, -6.010904084235073e+00, -6.011308053299798e+00, -6.009732256410866e+00, -6.011308053299798e+00, -6.009732256410866e+00, -2.017227094576784e+00, -2.017119362107715e+00, -2.034713989971119e+00, -2.034123299188132e+00, -2.000721926339797e+00, -2.004529907146029e+00, -2.015659164422447e+00, -2.019702526106845e+00, -2.039123528609253e+00, -2.028828047628302e+00, -2.039123528609253e+00, -2.028828047628302e+00, -5.342392889824132e-01, -5.328589868683401e-01, -5.963978115660494e-01, -5.967995890370220e-01, -4.744667692594699e-01, -4.922626953531841e-01, -5.044462269807899e-01, -5.206035924766311e-01, -5.589656068778978e-01, -5.310675361918344e-01, -5.589656068778978e-01, -5.310675361918346e-01, -1.590303731064351e-02, -1.622202602925969e-02, -7.686068738912326e-02, -7.740640594085144e-02, -1.226277108476653e-02, -1.374556900842599e-02, -2.138162852717316e+00, -2.137241884483113e+00, -2.498370001698013e-02, -2.748816134089467e-02, -2.498370001698013e-02, -2.748816134089467e-02, -4.058686450445663e-07, -4.553988720343625e-07, -8.568097755854181e-07, -8.961493942758479e-07, -3.620319037490813e-07, -4.289286740860596e-07, -4.197070484305720e-03, -4.260510798297187e-03, -3.858543297984831e-07, -9.899120090785789e-07, -3.858543298043646e-07, -9.899120090861956e-07, -5.378336573157616e-01, -5.399211626570884e-01, -5.361692894104325e-01, -5.382878956731246e-01, -5.370084880565538e-01, -5.391288757011532e-01, -5.375166697791997e-01, -5.396039960933009e-01, -5.372867073109951e-01, -5.393901509854937e-01, -5.372867073109951e-01, -5.393901509854937e-01, -5.183231694685522e-01, -5.200127493357083e-01, -4.203137056029035e-01, -4.221817807452122e-01, -4.517053855560047e-01, -4.537763565105657e-01, -4.819126657270763e-01, -4.836099120748274e-01, -4.668957009234631e-01, -4.686370142294444e-01, -4.668957009234631e-01, -4.686370142294444e-01, -6.319261383387695e-01, -6.331681190591882e-01, -1.213558975824963e-01, -1.221930036944489e-01, -1.695523208356081e-01, -1.712386853255434e-01, -2.685873214158636e-01, -2.700040690890054e-01, -2.167300361556253e-01, -2.166042242098070e-01, -2.167300361556253e-01, -2.166042242098070e-01, -3.782702956099824e-01, -3.809064127983096e-01, -8.428007180053980e-04, -8.589005069400196e-04, -2.063678910133187e-03, -2.251413588401895e-03, -2.586174843926540e-01, -2.621766202727302e-01, -8.366497661166560e-03, -9.381648448417299e-03, -8.366497661166622e-03, -9.381648448417415e-03, -1.304028749935560e-05, -1.449008285709615e-05, -1.666173432408189e-08, -1.677603337422876e-08, -1.405722217243170e-07, -1.690229034539454e-07, -7.228023591140254e-03, -7.491217210994883e-03, -3.281130766972237e-07, -7.628755667343649e-07, -3.281130766947699e-07, -7.628755667316926e-07]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05


def test_hyb_gga_xc_lcy_pbe_BrOH_cation_2_vsigma():
    # Prepare the input
    inp = test_data["BrOH_cation"]

    # Get the functional
    feval = pylibxc.LibXCFunctional("hyb_gga_xc_lcy_pbe", 2)

    # Evaluate the data
    out = feval.compute(inp, do_exc=True, do_vxc=True, do_fxc=False, do_kxc=False, do_lxc=False)
    tgt = out["vsigma"].flatten()
    ref_tgt = [-1.351199214389125e-08, 3.855567579455844e-10, -1.351206756628554e-08, -1.351187958637545e-08, 3.855637563905792e-10, -1.351198480017199e-08, -1.351140183503334e-08, 3.855734091993355e-10, -1.351133703283420e-08, -1.351268845389786e-08, 3.854697494807899e-10, -1.351296171567261e-08, -1.351194818733093e-08, 3.855271085313426e-10, -1.351221305922102e-08, -1.351194818733093e-08, 3.855271085313426e-10, -1.351221305922102e-08, -1.498630556530945e-05, 2.158879157656427e-06, -1.499122255526931e-05, -1.498640100117743e-05, 2.159323527660124e-06, -1.499169670601732e-05, -1.499289989819832e-05, 2.169371669283230e-06, -1.499556050183350e-05, -1.497268915059474e-05, 2.149943255801801e-06, -1.497630699324005e-05, -1.499487290261926e-05, 2.159156568071321e-06, -1.498062190852047e-05, -1.499487290261926e-05, 2.159156568071321e-06, -1.498062190852047e-05, -3.581666260432118e-03, 3.586683876242116e-03, -3.610000414353809e-03, -3.588667338600795e-03, 3.559577090514688e-03, -3.623802755155977e-03, -3.830760202798522e-03, 2.876045381924161e-03, -3.766686920820491e-03, -3.713565854246757e-03, 2.810968523930000e-03, -3.735800679144080e-03, -3.985317072361137e-03, 2.852692094259074e-03, -3.268193653126665e-03, -3.985317072361137e-03, 2.852692094259074e-03, -3.268193653126665e-03, 8.782971200462050e-02, 3.108902575321890e-01, 8.466934839752946e-02, 9.336703183208539e-02, 3.280826843588528e-01, 9.014062101059311e-02, -2.465531206256528e-03, 1.940414170439823e-03, -2.316125841795670e-03, 7.338340629313547e-02, 2.258949661124237e-01, 7.298773333720335e-02, 2.927329552191331e-02, 1.882246441728870e-01, 7.500181059456454e-02, 2.927329552191367e-02, 1.882246441728873e-01, 7.500181059456326e-02, 4.234992187879177e-03, 8.471332723898200e-03, 4.234815478114671e-03, 4.981401243153514e-03, 9.964515393423459e-03, 4.981135671116274e-03, 2.519353991871250e-02, 5.126941006152715e-02, 2.508484782013947e-02, 1.504261062368599e-03, 3.008683449168684e-03, 1.504268352893106e-03, 2.206856808471356e-03, 4.414566270491809e-03, 2.207169642292742e-03, 2.206856808921563e-03, 4.414566270088269e-03, 2.207169642742949e-03, -3.424207977016144e-06, 5.666948009101149e-07, -3.427534443785213e-06, -3.422861237960475e-06, 5.704413223836728e-07, -3.426171778149867e-06, -3.424133972134274e-06, 5.668443577206054e-07, -3.427456797444650e-06, -3.422932668655712e-06, 5.701514261968389e-07, -3.426267463102021e-06, -3.423547902693653e-06, 5.686004611431787e-07, -3.426842627496148e-06, -3.423547902693653e-06, 5.686004611431787e-07, -3.426842627496148e-06, -1.021171563854064e-04, 1.221811741084532e-05, -1.021345434689913e-04, -1.002695333198490e-04, 1.218856108878283e-05, -1.003522958735588e-04, -1.020032067984152e-04, 1.161795009824474e-05, -1.021741538082415e-04, -1.004484724363874e-04, 1.159619612758267e-05, -1.005630371105203e-04, -1.011213576645237e-04, 1.250231835492394e-05, -1.010883178982504e-04, -1.011213576645237e-04, 1.250231835492394e-05, -1.010883178982504e-04, -3.891989953855822e-03, 1.180452397706796e-02, -3.980205344027171e-03, -1.242463687218601e-03, 1.489938286408802e-02, -1.243583592718782e-03, -5.147041708330581e-03, 1.535577972946644e-02, -4.008185822677225e-03, -1.894054106650726e-03, 2.278859644535717e-02, -5.629690560536114e-04, -2.957238367241586e-03, 1.179162458306085e-02, -4.445153683926901e-03, -2.957238367241587e-03, 1.179162458306085e-02, -4.445153683926903e-03, 5.037693770344943e-02, 1.261488607621168e-01, 4.970476363366060e-02, 1.720142419255254e-02, 1.139695105238702e-01, 1.704328211549924e-02, 5.393352224291624e-02, 1.279112469154852e-01, 5.219958824584579e-02, -1.182922466849060e-04, 1.207887057881010e-04, -1.186052567737231e-04, 9.789741180937092e-02, 2.409472748596690e-01, 8.688096456074712e-02, 9.789741180937092e-02, 2.409472748596690e-01, 8.688096456074712e-02, 1.466737528551817e-03, 2.933546798259037e-03, 1.466737184973948e-03, 1.849488477807375e-03, 3.699144102256803e-03, 1.849490113112256e-03, 1.842539328758670e-02, 3.685108437354808e-02, 1.842533381680834e-02, 5.882924713141439e-02, 1.250822448857004e-01, 5.888438524612970e-02, 7.051722670912131e-03, 1.410360645889085e-02, 7.051521746901254e-03, 7.051722674199601e-03, 1.410360646869916e-02, 7.051521750188724e-03, 9.086591871434787e-04, 2.514346072918196e-02, 1.045344841960333e-03, -6.964655005320501e-04, 2.157065992117518e-02, -5.661799260181059e-04, -1.926998481144842e-04, 2.270457728491302e-02, -6.060188628410727e-05, 2.708724330592622e-04, 2.373865089872573e-02, 4.056483346581430e-04, 3.334278600391170e-05, 2.321019190891285e-02, 1.668195765368984e-04, 3.334278600391170e-05, 2.321019190891285e-02, 1.668195765368984e-04, 2.033067867557073e-03, 2.977269840520045e-02, 2.166411537799359e-03, -6.486868953544944e-03, 1.592277215307748e-02, -6.364194494757194e-03, -4.970626415363076e-03, 1.838749842245184e-02, -4.838880500797033e-03, -2.911251711840245e-03, 2.169730037966074e-02, -2.777620157006930e-03, -4.026303654379509e-03, 1.995497716545398e-02, -3.886725691071858e-03, -4.026303654379509e-03, 1.995497716545398e-02, -3.886725691071858e-03, -1.504477792500544e-03, 1.183264719377924e-02, -1.483159650647364e-03, 9.817827114674757e-04, 8.498631964250428e-02, 8.584466165612245e-04, -3.101776556422915e-03, 7.821972418059023e-02, -3.321357350977668e-03, -2.114520951546725e-03, 6.964082434152352e-02, -1.737764414057069e-03, -2.463068367052526e-03, 7.796350422599263e-02, -2.706586600414361e-03, -2.463068367052575e-03, 7.796350422599266e-02, -2.706586600414382e-03, -6.921765708758963e-03, 2.285950305464996e-02, -6.714108611283279e-03, 2.069096712929548e-02, 4.213028450134424e-02, 2.068032098009217e-02, 3.111300232164737e-02, 6.458066222247318e-02, 3.092265382086580e-02, 8.733636684151398e-03, 1.099497136873529e-01, 9.959252147581615e-03, 1.006738923992743e-01, 2.182010199987041e-01, 9.688652440815045e-02, 1.006738923992760e-01, 2.182010199987039e-01, 9.688652440816509e-02, 5.279060669970591e-03, 1.056259116938041e-02, 5.278664976344601e-03, 2.005764171600945e-03, 4.011531506685853e-03, 2.005762939143206e-03, 2.510365396575681e-03, 5.020763908060611e-03, 2.510359399587476e-03, 9.209060531739403e-02, 2.002688123716920e-01, 9.176874393667778e-02, 9.000809993482836e-03, 1.800188742308661e-02, 9.000737475406513e-03, 9.000809997156729e-03, 1.800188743452388e-02, 9.000737479080406e-03]
    error = numpy.max(numpy.abs(tgt-ref_tgt))/(1.0+numpy.max([numpy.abs(tgt), numpy.abs(ref_tgt)]))
    assert error < 5e-05
